<Customization level="10" description="v1.0 - Homologación de campos contables para México">
    <Page path="~/pages/ar/ar303000.aspx" ControlId="34" pageSource="">
        <PXFormView ID="BillAddress" ParentId="phG_tab_Items#1_BillAddress" TypeFullName="PX.Web.UI.PXFormView">
            <Children Key="Template">
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edStreet" />
                        <Prop Key="DataField" Value="Street" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule7" />
                        <Prop Key="Merge" Value="True" />
                        <Prop Key="ControlSize" Value="XS" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edExtNumber" />
                        <Prop Key="DataField" Value="ExtNumber" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edIntNumber" />
                        <Prop Key="DataField" Value="IntNumber" />
                        <Prop Key="LabelWidth" Value="94" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstLayoutRule6" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edNeighborhood" />
                        <Prop Key="DataField" Value="Neighborhood" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edMunicipality" />
                        <Prop Key="DataField" Value="Municipality" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="City" OriginalIndex="4" />
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edReference" />
                        <Prop Key="DataField" Value="Reference" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="AddressLine1" OriginalIndex="2" Remove="True" />
                <PXTextEdit DataField="AddressLine2" OriginalIndex="3" Remove="True" />
            </Children>
        </PXFormView>
        <PXFormView ID="DefAddress" ParentId="phG_tab_Items#0_DefAddress" TypeFullName="PX.Web.UI.PXFormView">
            <Children Key="Template">
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edStreet" />
                        <Prop Key="DataField" Value="Street" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule9" />
                        <Prop Key="Merge" Value="True" />
                        <Prop Key="ControlSize" Value="XS" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edExtNumber" />
                        <Prop Key="DataField" Value="ExtNumber" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edIntNumber" />
                        <Prop Key="DataField" Value="IntNumber" />
                        <Prop Key="LabelWidth" Value="94" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstLayoutRule8" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edNeighborhood" />
                        <Prop Key="DataField" Value="Neighborhood" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edMunicipality" />
                        <Prop Key="DataField" Value="Municipality" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="City" OriginalIndex="4" />
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edReference" />
                        <Prop Key="DataField" Value="Reference" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="AddressLine1" OriginalIndex="2" Remove="True" />
                <PXTextEdit DataField="AddressLine2" OriginalIndex="3" Remove="True" />
            </Children>
        </PXFormView>
        <PXTabItem Text="Billing Settings" ParentId="phG_tab_Items#1" TypeFullName="PX.Web.UI.PXTabItem">
            <Children Key="Template">
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule17" />
                        <Prop Key="StartGroup" Value="True" />
                        <Prop Key="GroupCaption" Value="Facturacion" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXTextEdit20" />
                        <Prop Key="DataField" Value="TaxRegistrationID" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXCheckBox TypeFullName="PX.Web.UI.PXCheckBox">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXCheckBox22" />
                        <Prop Key="DataField" Value="IsNaturalPerson" />
                    </PXCheckBox>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXTextEdit19" />
                        <Prop Key="DataField" Value="BillContact.PersonalID" />
                    </PXTextEdit>
                </AddItem>
                <PXLayoutRule OriginalIndex="13" />
            </Children>
        </PXTabItem>
        <PXFormView ID="DefContact" ParentId="phG_tab_Items#0_DefContact" TypeFullName="PX.Web.UI.PXFormView">
            <Children Key="Template">
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule27" />
                        <Prop Key="Merge" Value="True" />
                        <Prop Key="ControlSize" Value="XS" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edFirstName" />
                        <Prop Key="DataField" Value="FirstName" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edMidName" />
                        <Prop Key="DataField" Value="MidName" />
                        <Prop Key="LabelWidth" Value="94" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstLayoutRule28" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edLastName" />
                        <Prop Key="DataField" Value="LastName" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edSecondLastName" />
                        <Prop Key="DataField" Value="SecondLastName" />
                    </PXTextEdit>
                </AddItem>
                <PXMailEdit DataField="EMail" OriginalIndex="3" />
            </Children>
        </PXFormView>
        <PXFormView ID="BillContact" ParentId="phG_tab_Items#1_BillContact" TypeFullName="PX.Web.UI.PXFormView">
            <Children Key="Template">
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule34" />
                        <Prop Key="Merge" Value="True" />
                        <Prop Key="ControlSize" Value="XS" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edFirstName" />
                        <Prop Key="DataField" Value="FirstName" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edMidName" />
                        <Prop Key="DataField" Value="MidName" />
                        <Prop Key="LabelWidth" Value="94" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstLayoutRule33" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edLastName" />
                        <Prop Key="DataField" Value="LastName" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edSecondLastName" />
                        <Prop Key="DataField" Value="SecondLastName" />
                    </PXTextEdit>
                </AddItem>
                <PXMaskEdit DataField="Phone1" OriginalIndex="3" />
            </Children>
        </PXFormView>
    </Page>
    <Page path="~/pages/cs/cs102000.aspx" ControlId="9" pageSource="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">
        <PXTabItem Text="General Info" ParentId="phG_tab_Items#0" TypeFullName="PX.Web.UI.PXTabItem">
            <Children Key="Template">
                <AddItem>
                    <PXDropDown TypeFullName="PX.Web.UI.PXDropDown">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edRegimen" />
                        <Prop Key="DataField" Value="Regimen" />
                    </PXDropDown>
                </AddItem>
                <PXFormView ID="PXFormViewLocation" OriginalIndex="6" />
            </Children>
        </PXTabItem>
        <PXFormView ID="DefAddress" ParentId="phG_tab_Items#0_DefAddress" TypeFullName="PX.Web.UI.PXFormView">
            <Children Key="Template">
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edStreet" />
                        <Prop Key="DataField" Value="Street" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXLayoutRule3" />
                        <Prop Key="Merge" Value="True" />
                        <Prop Key="ControlSize" Value="XS" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edExtNumber" />
                        <Prop Key="DataField" Value="ExtNumber" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edIntNumber" />
                        <Prop Key="DataField" Value="IntNumber" />
                        <Prop Key="LabelWidth" Value="94" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXLayoutRule TypeFullName="PX.Web.UI.PXLayoutRule">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstLayoutRule2" />
                    </PXLayoutRule>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edNeighborhood" />
                        <Prop Key="DataField" Value="Neighborhood" />
                    </PXTextEdit>
                </AddItem>
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="edMunicipality" />
                        <Prop Key="DataField" Value="Municipality" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="City" OriginalIndex="4" />
                <AddItem>
                    <PXTextEdit TypeFullName="PX.Web.UI.PXTextEdit">
                        <Prop Key="Virtual:ApplyStylesheetSkin" />
                        <Prop Key="ID" Value="CstPXTextEdit4" />
                        <Prop Key="DataField" Value="Reference" />
                    </PXTextEdit>
                </AddItem>
                <PXTextEdit DataField="AddressLine1" OriginalIndex="2" Remove="True" />
                <PXTextEdit DataField="AddressLine2" OriginalIndex="3" Remove="True" />
            </Children>
        </PXFormView>
    </Page>
    <Graph ClassName="Address" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects;

namespace AcumaticaMX
{
  using PX.Objects.CR;

  [PXTable(typeof(Address.addressID), IsOptional = true)]
  public class MXAddressExtension : PXCacheExtension<PX.Objects.CR.Address>
  {
    #region Street
    public abstract class street : IBqlField
    {
    }
    [PXDBString(50, IsUnicode = true)]
    [PXUIField(DisplayName = "Calle", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string Street { get; set; }
    #endregion

    #region ExtNumber
    public abstract class extNumber : IBqlField
    {
    }
    [PXDBString(10, IsUnicode = true)]
    [PXUIField(DisplayName = "Número Exterior", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string ExtNumber { get; set; }
    #endregion

    #region IntNumber
    public abstract class intNumber : IBqlField
    {
    }
    [PXDBString(10, IsUnicode = true)]
    [PXUIField(DisplayName = "Número Interior", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string IntNumber { get; set; }
    #endregion

    #region Neighborhood
    public abstract class neighborhood : IBqlField
    {
    }
    [PXDBString(50, IsUnicode = true)]
    [PXUIField(DisplayName = "Colonia", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string Neighborhood { get; set; }
    #endregion

    #region Municipality
    public abstract class municipality : IBqlField
    {
    }
    [PXDBString(50, IsUnicode = true)]
    [PXUIField(DisplayName = "Municipio/Delegación", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string Municipality { get; set; }
    #endregion

    #region Reference
    public abstract class reference : IBqlField
    {
    }
    [PXDBString(100, IsUnicode = true)]
    [PXUIField(DisplayName = "Referencia", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string Reference { get; set; }
    #endregion
  }
}]]></CDATA>
    </Graph>
    <Graph ClassName="ARRegister" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects;
using PX.Objects.AR;

namespace AcumaticaMX
{
  [PXTable(typeof(ARRegister.docType), typeof(ARRegister.refNbr), IsOptional = true)]
  public class MXARRegisterExtension : PXCacheExtension<PX.Objects.AR.ARRegister>
  {    
    // Campos persistentes (en BD)
  
    #region Series
    public abstract class series : IBqlField { }

    [PXDBString(25, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Serie")]
    public virtual string Series { get; set; }
    #endregion Series


    #region Certificate
    public abstract class certificate : IBqlField { }

    [PXDBString(2500, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Certificado", Enabled = false)]
    public virtual string Certificate { get; set; }
    #endregion Certificate

    #region PaymentForm
    public abstract class paymentForm : IBqlField { }

    [PXDBString(50, IsFixed = false, IsUnicode = true)]
    [PXDefault(AcumaticaMX.Common.PayForm.One)]
    [PXStringList(AcumaticaMX.Common.PayForm.Values)]
    [PXUIField(DisplayName = "Forma de Pago")]
    public virtual string PaymentForm { get; set; }
    #endregion PaymentForm

    #region PaymentMethod
    public abstract class paymentMethod : IBqlField { }

    [PXDBString(50, IsFixed = false, IsUnicode = true)]
    [PXDefault(AcumaticaMX.Common.PayMethod.Transfer)]
    [PXStringList(
      new string[]
      {
                AcumaticaMX.Common.PayMethod.Cash, AcumaticaMX.Common.PayMethod.Cheque,
        AcumaticaMX.Common.PayMethod.Transfer, AcumaticaMX.Common.PayMethod.CreditCard,
        AcumaticaMX.Common.PayMethod.Wallet, AcumaticaMX.Common.PayMethod.Electronic,
        AcumaticaMX.Common.PayMethod.Coupons, AcumaticaMX.Common.PayMethod.DebitCard,
        AcumaticaMX.Common.PayMethod.ServiceCard, AcumaticaMX.Common.PayMethod.Other,
      },
      new string[]
      {
        AcumaticaMX.Common.PayMethod.CashLabel, AcumaticaMX.Common.PayMethod.ChequeLabel,
        AcumaticaMX.Common.PayMethod.TransferLabel, AcumaticaMX.Common.PayMethod.CreditCardLabel,
        AcumaticaMX.Common.PayMethod.WalletLabel, AcumaticaMX.Common.PayMethod.ElectronicLabel,
        AcumaticaMX.Common.PayMethod.CouponsLabel, AcumaticaMX.Common.PayMethod.DebitCardLabel,
        AcumaticaMX.Common.PayMethod.ServiceCardLabel, AcumaticaMX.Common.PayMethod.OtherLabel,
      }, MultiSelect = true)]
    [PXUIField(DisplayName = "Metodo de Pago")]
    public virtual string PaymentMethod { get; set; }
    #endregion PaymentMethod

    #region PaymentConditions
    public abstract class paymentConditions : IBqlField { }

    [PXDBString(100, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Condiciones de Pago")]
    public virtual string PaymentConditions { get; set; }
    #endregion PaymentConditions

    #region OriginAccount
    public abstract class originAccount : IBqlField { }

    [PXDBString(4, IsFixed = true, IsUnicode = true)]
    [PXUIField(DisplayName = "Cuenta de Pago", Enabled = false)]
    public virtual string OriginAccount { get; set; }
    #endregion OriginAccount
    
    
    #region StampDate
    public abstract class stampDate : IBqlField { }

    [PXDBDate()]
    [PXUIField(DisplayName = "Fecha de Timbrado", Enabled = false)]
    public virtual DateTime? StampDate { get; set; }
    #endregion StampDate

    #region Uuid
    public abstract class uuid : IBqlField { }

    [PXDBGuid()]
    [PXUIField(DisplayName = "UUID", Enabled = false)]
    public virtual Guid? Uuid { get; set; }
    #endregion Uuid

    #region SatCertificateNum
    public abstract class satCertificateNum : IBqlField { }

    [PXDBString(20, IsFixed = true, IsUnicode = false)]
    [PXUIField(DisplayName = "No. Certificado SAT", Enabled = false)]
    public virtual string SatCertificateNum { get; set; }
    #endregion SatCertificateNum

    #region CfdStamp
    public abstract class cfdStamp : IBqlField { }

    [PXDBString(500, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Sello CFD", Enabled = false)]
    public virtual string CfdStamp { get; set; }
    #endregion CfdStamp

    #region SatStamp
    public abstract class satStamp : IBqlField { }

    [PXDBString(500, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Sello SAT", Enabled = false)]
    public virtual string SatStamp { get; set; }
    #endregion SatStamp

    #region QrCode
    public abstract class qrCode : IBqlField { }

    [PXDBString(100, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Codigo QR", Enabled = false)]
    public virtual string QrCode { get; set; }
    #endregion QrCode

    #region TfdOriginalString
    public abstract class tfdOriginalString : IBqlField { }

    [PXDBString(1000, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Cadena Original TFD", Enabled = false)]
    public virtual string TfdOriginalString { get; set; }
    #endregion TfdOriginalString

    // Campos no persistentes
    #region OriginalString
    public abstract class originalString : IBqlField { }

    [PXString(4000, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Cadena Original", Enabled = false)]
    public virtual string OriginalString { get; set; }
    #endregion OriginalString

    #region AmountInWords
    public abstract class amountInWords : IBqlField { }

    [PXString(500, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Monto en Letra", Enabled = false)]
    public virtual string AmountInWords { get; set; }
    #endregion AmountInWords  
  }
}]]></CDATA>
    </Graph>
    <Graph ClassName="BAccount" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects;

namespace AcumaticaMX
{
  using PX.Objects.CR;

  [PXTable(typeof(BAccount.bAccountID), IsOptional = true)]
  public class MXBAccountExtension : PXCacheExtension<PX.Objects.CR.BAccount>
  {
    #region Regimen
    public abstract class regimen : IBqlField
    {
    }
    [PXDBString(100, IsFixed = false, IsUnicode = true)]
    [PXDefault(AcumaticaMX.Common.RegimenTypes.JuridicalGeneralLabel)]
    [PXStringList(
      new string[]
      {
                AcumaticaMX.Common.RegimenTypes.NaturalSalaried, AcumaticaMX.Common.RegimenTypes.NaturalFee,
                AcumaticaMX.Common.RegimenTypes.NaturalLessor, AcumaticaMX.Common.RegimenTypes.NaturalBusinessActivity,
                AcumaticaMX.Common.RegimenTypes.NaturalTaxIncorporated,
                AcumaticaMX.Common.RegimenTypes.JuridicalGeneral, AcumaticaMX.Common.RegimenTypes.JuridicalNonProfit
      },
      new string[]
      {
                AcumaticaMX.Common.RegimenTypes.NaturalSalariedLabel, AcumaticaMX.Common.RegimenTypes.NaturalFeeLabel,
                AcumaticaMX.Common.RegimenTypes.NaturalLessorLabel, AcumaticaMX.Common.RegimenTypes.NaturalBusinessActivityLabel,
                AcumaticaMX.Common.RegimenTypes.NaturalTaxIncorporatedLabel,
                AcumaticaMX.Common.RegimenTypes.JuridicalGeneralLabel, AcumaticaMX.Common.RegimenTypes.JuridicalNonProfitLabel
      })]
    [PXUIField(DisplayName = "Regimen fiscal")]
    public virtual string Regimen { get; set; }
    #endregion
    
    #region DefaultOriginAccount
    public abstract class defaultOriginAccount : IBqlField
    {
    }
    [PXDBString(30, IsFixed = false, IsUnicode = true)]
    [PXUIField(DisplayName = "Cuenta de origen default")]
    public virtual string DefaultOriginAccount { get; set; }
        #endregion

        #region IsNaturalPerson
        public abstract class isNaturalPerson : IBqlField
        {
        }
        [PXDBBool()]
        [PXDefault(false, PersistingCheck = PXPersistingCheck.Nothing)]
        [PXUIField(DisplayName = "Persona Física")]
        public virtual bool? IsNaturalPerson { get; set; }
        #endregion

    }
}]]></CDATA>
    </Graph>
    <Graph ClassName="BranchMaint" Source="#CDATA" IsNew="True" FileType="ExistingGraph">
        <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects;

namespace AcumaticaMX
{
    using PX.Objects.CS;
    using PX.Objects.CR;

    public class MXBranchMaintExtension : PXGraphExtension<BranchMaint>
    {
        #region Event Handlers
        protected virtual void LocationExtAddress_RowSelected(PXCache sender, PXRowSelectedEventArgs e, PXRowSelected InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            LocationExtAddress address = e.Row as LocationExtAddress;

            if (address == null) return;

            if (address.IsAddressSameAsMain != null)
            {
                bool enabled = !(address.IsAddressSameAsMain ?? false);

                PXUIFieldAttribute.SetEnabled<MXAddressExtension.street>(sender, address, enabled);
                PXUIFieldAttribute.SetEnabled<MXAddressExtension.extNumber>(sender, address, enabled);
                PXUIFieldAttribute.SetEnabled<MXAddressExtension.intNumber>(sender, address, enabled);
                PXUIFieldAttribute.SetEnabled<MXAddressExtension.neighborhood>(sender, address, enabled);
                PXUIFieldAttribute.SetEnabled<MXAddressExtension.municipality>(sender, address, enabled);
                PXUIFieldAttribute.SetEnabled<MXAddressExtension.reference>(sender, address, enabled);
            }
        }

        protected virtual void Address_Street_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine1>(address, (addressExt.Street + " " + addressExt.ExtNumber).Trim());
        }

        protected virtual void Address_ExtNumber_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine1>(address, (addressExt.Street + " " + addressExt.ExtNumber).Trim());
        }

        protected virtual void Address_IntNumber_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine2>(address, addressExt.IntNumber);
        }

        protected virtual void Address_Municipality_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            //sender.SetValueExt<Address.addressLine3>(address, addressExt.Municipality);
        }

        #endregion
    }
}]]></CDATA>
    </Graph>
    <Graph ClassName="Common" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AcumaticaMX
{
    /// <summary>
    /// Esta clase contiene todos los catálogos de campos que tienen opciones predefinidas por el SAT
    /// </summary>
    public static class Common
    {
        /// <summary>
        /// Catálogo de regimenes fiscales
        /// </summary>
        public static class RegimenTypes
        {
            // Valores
            public const string NaturalSalaried = "Asalariados";
            public const string NaturalFee = "Honorarios";
            public const string NaturalLessor = "Arrendamiento de Inmuebles";
            public const string NaturalBusinessActivity = "Actividades Empresariales";
            public const string NaturalTaxIncorporated = "Incorporación Fiscal";

            public const string JuridicalGeneral = "Personas Morales del Régimen General";
            public const string JuridicalNonProfit = "Personas Morales con Fines no Lucrativos";

            public static string Values
            {
                get
                {
                    return string.Join(",", typeof(PayMethod).GetFields().Where(x => !x.Name.Contains("Label")).Select(x => x.GetValue(null)));
                }
            }

            /// Etiquetas
            public const string NaturalSalariedLabel = "Persona Física - Asalariados";
            public const string NaturalFeeLabel = "Persona Física - Honorarios";
            public const string NaturalLessorLabel = "Persona Física - Arrendamiento de Inmuebles";
            public const string NaturalBusinessActivityLabel = "Persona Física - Actividades Empresariales";
            public const string NaturalTaxIncorporatedLabel = "Persona Física - Incorporación Fiscal";

            public const string JuridicalGeneralLabel = "Personas Morales - Régimen General";
            public const string JuridicalNonProfitLabel = "Personas Morales - Fines no Lucrativos";

            public static string Labels
            {
                get
                {
                    return string.Join(",", typeof(PayMethod).GetFields().Where(x => x.Name.Contains("Label")).Select(x => x.GetValue(null)));
                }
            }
        }

        /// <summary>
        /// Catálogo de formas de pago
        /// </summary>
        public static class PayForm
        {
            public const string One = "Pago en una sola exhibición";
            public const string Partial = "Pago en parcialidades";

            public const string Values = "Pago en una sola exhibición, Pago en parcialidades";
        }

        /// <summary>
        /// Catálogo de métodos de pago
        /// </summary>
        public static class PayMethod
        {
            public const string Cash = "01";
            public const string Cheque = "02";
            public const string Transfer = "03";
            public const string CreditCard = "04";
            public const string Wallet = "05";
            public const string Electronic = "06";
            public const string Coupons = "08";
            public const string DebitCard = "28";
            public const string ServiceCard = "29";
            public const string Other = "99";

            public static string Values
            {
                get
                {
                    return string.Join(",", typeof(PayMethod).GetFields().Where(x => !x.Name.Contains("Label")).Select(x => x.GetValue(null)));
                }
            }

            public const string CashLabel = "Efectivo";
            public const string ChequeLabel = "Cheque nominativo";
            public const string TransferLabel = "Transferencia electrónica de fondos";
            public const string CreditCardLabel = "Tarjetas de Crédito";
            public const string WalletLabel = "Monedero Electrónico";
            public const string ElectronicLabel = "Dinero electrónico";
            public const string CouponsLabel = "Vales de despensa";
            public const string DebitCardLabel = "Tarjeta de Débito";
            public const string ServiceCardLabel = "Tarjeta de Servicio";
            public const string OtherLabel = "Otros";

            public static string Labels
            {
                get
                {
                    return string.Join(",", typeof(PayMethod).GetFields().Where(x => x.Name.Contains("Label")).Select(x => x.GetValue(null)));
                }
            }
        }
    }
}]]></CDATA>
    </Graph>
    <Graph ClassName="Contact" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using PX.Data;
using PX.Data.EP;
using PX.Objects.AP;
using PX.Objects.CR.MassProcess;
using PX.Objects.CS;
using System;
using PX.TM;
using PX.SM;
using PX.Objects.EP;
using System.Collections.Generic;
using PX.Objects;
using PX.Objects.CR;

namespace AcumaticaMX
{
  [PXTable(typeof(Contact.contactID), IsOptional = true)]
  public class MXContactExtension : PXCacheExtension<PX.Objects.CR.Contact>
  {
    #region SecondLastName
    public abstract class secondLastName : IBqlField
    {
    }
    [PXDBString(100, IsUnicode = true)]
    [PXUIField(DisplayName = "Apellido Materno", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string SecondLastName { get; set; }
    #endregion

    #region PersonalID
    public abstract class personalID : IBqlField
    {
    }
    [PXDBString(100, IsUnicode = true)]
    [PXUIField(DisplayName = "CURP", Visibility = PXUIVisibility.SelectorVisible)]
    public virtual string PersonalID { get; set; }
    #endregion
  }
}]]></CDATA>
    </Graph>
    <Graph ClassName="CustomerMaint" Source="#CDATA" IsNew="True" FileType="ExistingGraph">
        <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects;

namespace AcumaticaMX
{

    using PX.Objects.CR;
    using PX.Objects.AR;

    public class MXCustomerMaintExtension : PXGraphExtension<CustomerMaint>
    {
        #region Event Handlers
        protected virtual void Address_Street_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine1>(address, (addressExt.Street + " " + addressExt.ExtNumber).Trim());
        }

        protected virtual void Address_ExtNumber_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine1>(address, (addressExt.Street + " " + addressExt.ExtNumber).Trim());
        }

        protected virtual void Address_IntNumber_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            sender.SetValueExt<Address.addressLine2>(address, addressExt.IntNumber);
        }

        protected virtual void Address_Municipality_FieldUpdated(PXCache sender, PXFieldUpdatedEventArgs e, PXFieldUpdated InvokeBaseHandler)
        {
            if (InvokeBaseHandler != null)
                InvokeBaseHandler(sender, e);

            Address address = e.Row as Address;

            if (address == null) return;

            MXAddressExtension addressExt = address.GetExtension<MXAddressExtension>();

            if (addressExt == null) return;

            //sender.SetValueExt<Address.addressLine3>(address, addressExt.Municipality);
        }
        #endregion
    }
}]]></CDATA>
    </Graph>
    <Graph ClassName="Messages" Source="#CDATA" IsNew="True" FileType="NewFile">
        <CDATA name="Source"><![CDATA[using System;
using PX.Common;

namespace AcumaticaMX
{
    /// <summary>
    /// Librería de mensajes y etiquetas centralizada
    /// </summary>
    public static class Messages
    {
        // Textos y Etiquetas de campos
        #region Nombres
        //public const string Etiqueta = "Valor";
        #endregion

    }
}]]></CDATA>
    </Graph>
    <Sql TableName="MXAddressExtension" TableSchemaXml="#CDATA">
        <CDATA name="TableSchemaXml"><![CDATA[<table name="MXAddressExtension">
  <col name="CompanyID" type="Int" default="Zero" />
  <col name="AddressID" type="Int" />
  <col name="Street" type="NVarChar(50)" nullable="true" />
  <col name="ExtNumber" type="NVarChar(10)" nullable="true" />
  <col name="IntNumber" type="NVarChar(10)" nullable="true" />
  <col name="Neighborhood" type="NVarChar(50)" nullable="true" />
  <col name="Municipality" type="NVarChar(50)" nullable="true" />
  <col name="Reference" type="NVarChar(100)" nullable="true" />
  <index name="MXAddressExtension_PK" clustered="true" primary="true" unique="true">
    <col name="CompanyID" />
    <col name="AddressID" />
  </index>
</table>]]></CDATA>
    </Sql>
    <Sql TableName="MXARRegisterExtension" TableSchemaXml="#CDATA">
        <CDATA name="TableSchemaXml"><![CDATA[<table name="MXARRegisterExtension">
  <col name="CompanyID" type="Int" default="Zero" />
  <col name="DocType" type="Char(3)" />
  <col name="RefNbr" type="Char(15)" />
  <col name="Series" type="NVarChar(25)" nullable="true" />
  <col name="Certificate" type="NVarChar(2500)" nullable="true" />
  <col name="PaymentForm" type="NVarChar(50)" nullable="true" />
  <col name="PaymentMethod" type="NVarChar(50)" nullable="true" />
  <col name="OriginAccount" type="NChar(4)" nullable="true" />
  <col name="PaymentConditions" type="NVarChar(100)" nullable="true" />
  <col name="StampDate" type="SmallDateTime" nullable="true" />
  <col name="Uuid" type="UniqueIdentifier" nullable="true" />
  <col name="SatCertificateNum" type="NChar(20)" nullable="true" />
  <col name="CfdStamp" type="NVarChar(500)" nullable="true" />
  <col name="SatStamp" type="NVarChar(500)" nullable="true" />
  <col name="QrCode" type="NVarChar(100)" nullable="true" />
  <col name="TfdOriginalString" type="NVarChar(1000)" nullable="true" />
  <index name="MXARRegisterExtension_PK" clustered="true" primary="true" unique="true">
    <col name="CompanyID" />
    <col name="DocType" />
    <col name="RefNbr" />
  </index>
</table>]]></CDATA>
    </Sql>
    <Sql TableName="MXBAccountExtension" TableSchemaXml="#CDATA">
        <CDATA name="TableSchemaXml"><![CDATA[<table name="MXBAccountExtension">
  <col name="CompanyID" type="Int" default="Zero" />
  <col name="BAccountID" type="Int" />
  <col name="Regimen" type="NVarChar(100)" nullable="true" />
  <col name="DefaultOriginAccount" type="NVarChar(30)" nullable="true" />
  <index name="MXBAccountExtension_PK" clustered="true" primary="true" unique="true">
    <col name="CompanyID" />
    <col name="BAccountID" />
  </index>
</table>]]></CDATA>
    </Sql>
    <Sql TableName="MXContactExtension" TableSchemaXml="#CDATA">
        <CDATA name="TableSchemaXml"><![CDATA[<table name="MXContactExtension">
  <col name="CompanyID" type="Int" default="Zero" />
  <col name="ContactID" type="Int" />
  <col name="SecondLastName" type="NVarChar(100)" nullable="true" />
  <col name="PersonalID" type="NVarChar(100)" nullable="true" />
  <index name="MXContactExtension_PK" clustered="true" primary="true" unique="true">
    <col name="CompanyID" />
    <col name="ContactID" />
  </index>
</table>]]></CDATA>
    </Sql>
</Customization>